#!usr/bin/python

import re
import files
import sqlite3
import generateHtml
import p
# -*- coding: utf-8 -*-
__author__="Coronado Gozain Saine, Hernandez Cuecuecha Jorge Alberto"
__copyright__="Copyright 2017, UNAM-CERT"
__license__="UNAM CERT"
__version__="1.0"
__status__="Prototype"

vid = 1
class file_vulnerability:
        pass

def get_vulnerability (option):
        relist=[]
        cont=[]
        fv=[]
        fvfiv=[]
        vul=[]
        tablev=[]
        vulx = " "
        lnum = 0
        vulnes = {}
        global vid
        fileslist=files.get_listfiles()
        expression=[]
        connection= sqlite3.connect("../base/Fraudatanalyzer.db")
        cursor= connection.cursor()
        for e in cursor.execute("SELECT  expression FROM vulnerabilities WHERE name = '%s'" %option):
        	c=list(e)
                expression.append(c[0])
	for x in range(len(expression)):
		e= re.compile(expression[x],re.I)
		relist.append(e)
	for file in fileslist:
                with open(file,"r") as f:
                	for num, line in enumerate(f,1):
                        	line = line.strip()
                                if re.match(r'^\s*$', line): continue #If line is empty, continue with the next one
                                if line[0] == '#': continue
				if re.search(r'<.*?>',line): continue
                                if re.match(r'^(\/\*(\s*|.*?))|((\s*|.*?)\*\/)|(\/\/.*)$',line): continue
                                for r in range(len(relist)):
                                	if relist[r].search(line):
                                                lnum = lnum+1
                                                fv.append(line+"/nn"+file)
                                                #fiv.append(file)
                                                tablev.append(relist[r].pattern)
                                                #vulx += '<tr>\n'
                                                #vulx += '<td>'+option+'</td>\n'
                                                #vulx += '<td>'+str(num)+'</td>\n'   
                                                #vulx += '<td>'+line+'</td>\n'   
                                                #vulx += '<td>'+file+'</td>\n</tr>'   
        vulnes[vid]=[lnum]                                           
        vid = vid+1
        #generateHtml.createhtml(option, lnum, vulx)  
        p.dixi(vulnes)
        print option
	for lf in range(len(fv)):
        	h=fv[lf].split("/nn")
               	vul.append(h)
	for g in range(len(vul)):
               	vul[g].append(tablev[g])
	#print vul[0]
	#print vul
	return vul
#get_vulnerability("7")

